---

# Install Lazarus
- include: "lazarus/main.yml"


- include: "ccdciel/install/main.yml"


- debug:
    msg:
      #- "ccdciel src folder: {{ ccdciel_src }}"
      - "ccdciel build folder: {{ ccdciel_build }}"


- name: Remove existing ccdciel build folder
  file:
    path: "{{ ccdciel_build }}"
    state: absent


- name: Create ccdciel build folder
  file:
    path: "{{ ccdciel_build }}"
    state: directory


- debug:
    msg:
      - "ccdciel git repo: {{ ccdciel_git_repo }}"
      - "ccdciel git tag: {{ ccdciel_git_version }}"
      - "ccdciel git refspec: {{ ccdciel_git_refspec }}"


- name: Git checkout of ccdciel
  git:
    repo: "{{ ccdciel_git_repo }}"
    dest: "{{ ccdciel_build }}"
    depth: 1
    version: "{{ ccdciel_git_version }}"
    refspec: "{{ ccdciel_git_refspec }}"
    #force: yes
 

- name: Configure ccdciel build
  command:
    cmd: "./configure prefix={{ install_prefix }} target={{ ccdciel_arch[ansible_facts['architecture']]['config_target'] }} lazarus={{ lazarus_lib }}"
    chdir: "{{ ccdciel_build }}"


- name: Clean ccdciel
  community.general.make:
    target: clean
    params:
      CPU_TARGET: "{{ ccdciel_arch[ansible_facts['architecture']]['cpu_target'] }}"
      OS_TARGET: linux
    chdir: "{{ ccdciel_build }}"


- name: Build ccdciel
  community.general.make:
    #jobs: X
    params:
      CPU_TARGET: "{{ ccdciel_arch[ansible_facts['architecture']]['cpu_target'] }}"
      OS_TARGET: linux
    chdir: "{{ ccdciel_build }}"


- name: Install ccdciel
  community.general.make:
    target: install
    chdir: "{{ ccdciel_build }}"
  become: yes


- name: Cleanup ccdciel build folder
  file:
    path: "{{ ccdciel_build }}"
    state: absent
  tags:
    - cleanup

