---

- include: "common/install/main.yml"


- name: Populate service facts
  service_facts:


#- debug:
#    var: ansible_facts.services


- name: Gather package facts
  package_facts:
    manager: auto
  tags:
    - always


#- debug:
#    var: ansible_facts.packages


- set_fact:
    remove_packages:  "{{ blocking_packages | intersect(ansible_facts.packages) }}"
  tags:
    - always


- fail:
    msg: "The following packages need to be removed before continuing: {{ remove_packages | join(', ')}}"
  when:
    - remove_packages | length > 0
  tags:
    - always


- name: Create install path
  file:
    path: "{{ install_prefix }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: true
  when:
    - install_prefix != '/usr'


- name: Setup additional library paths
  template:
    src: ld.so.conf.d/astro.conf.j2
    dest: /etc/ld.so.conf.d/astro.conf
    owner: root
    group: root
    mode: '0644'
  become: true
  when:
    - install_prefix != '/usr'


- name: Reload ldconfig
  command:
    cmd: "ldconfig"
  become: true


- name: Firewall rules (firewalld)
  firewalld:
    port: "{{ item.port }}/{{ item.proto }}"
    permanent: yes
    immediate: yes
    state: enabled
  with_items: "{{ firewall_ports }}"
  become: yes
  when:
    - ansible_facts.services['firewalld.service'] is defined
    - ansible_facts.services['firewalld.service']['state'] == 'running'
    #- ansible_facts.services['firewalld.service']['status'] == 'enabled'


- name: Firewall rules (ufw)
  ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    log: yes
  with_items: "{{ firewall_ports }}"
  become: yes
  when:
    - ansible_facts.services['ufw.service'] is defined
    #- ansible_facts.services['ufw.service']['state'] == 'running'
    #- ansible_facts.services['ufw.service']['status'] == 'enabled'


