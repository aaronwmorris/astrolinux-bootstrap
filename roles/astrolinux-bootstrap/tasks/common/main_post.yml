---

- include: "common/install/main.yml"


- name: "Find binaries in {{ install_prefix }}"
  find:
    paths: "{{ install_prefix }}/bin"
    recurse: no
    file_type: file
  register: install_prefix_bin_files
  when:
    - install_prefix != '/usr'


#- debug:
#    var: install_prefix_bin_files


- name: "Find symlinks in {{ install_prefix }}"
  find:
    paths: "{{ install_prefix }}/bin"
    recurse: no
    file_type: link
  register: install_prefix_bin_symlinks
  when:
    - install_prefix != '/usr'


#- debug:
#    var: install_prefix_bin_symlinks


- name: Create symbolic links in /usr/bin
  file:
    src:  "{{ item.path }}"
    dest: "/usr/bin/{{ item.path | basename }}"
    owner: root
    group: root
    state: link
    force: no
  become: true
  when:
    - install_prefix != '/usr'
  with_items: "{{ install_prefix_bin_files.files }}"


- name: Create symbolic links in /usr/bin
  file:
    src:  "{{ item.path }}"
    dest: "/usr/bin/{{ item.path | basename }}"
    owner: root
    group: root
    state: link
    force: no
  become: true
  when:
    - install_prefix != '/usr'
  with_items: "{{ install_prefix_bin_symlinks.files }}"


- name: Add user to groups for device access
  user:
    name: "{{ ansible_env.USER }}"
    groups: "{{ group_membership }}"
    append: yes
  become: yes
  register: group_membership_result


- debug:
    msg:
      - "You should reboot your device to ensure your user has the correct group membership to access devices"
  when:
    - group_membership_result.changed


- name: Disable SELinux (RedHat)
  selinux:
    state: disabled
  become: yes
  when:
    - ansible_facts['os_family'] == 'RedHat'
  register: disable_selinux_result


- debug:
    msg:
      - "Please reboot your device to disable SELinux"
  when:
    - ansible_facts['os_family'] == 'RedHat'
    - disable_selinux_result.changed
